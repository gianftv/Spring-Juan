banner.location=classpath:banner.txt

server.port:8081

#SI NO ESCRIBIMOS NADA SOBRE EL DATASOURCE H2 Y SIMPLEMENTE TENEMOS LA DEPENDENCIA EN EL POM
#NUESTROS PROYECTOS FUNCIONARAN IGUALMENTE PERO SOLO EN EL ESQUEMA DE PRUEBA 'jdbc:h2:mem:testdb' 
#ENTRANDO CON 'sa' Y SIN CONTRASE�A A TRAVES DE LA 'h2-console', EN CAMBIO SI DETALLAMOS EL DATASOURCE
#PARA LA H2 NUESTRO ESQUEMA IR� A DONDE LE DIGAMOS CON ESE NOMBRE DE USER Y PASS QUE HEMOS PUESTO.
#NO OBSTANTE USAR ESTA BBDD SOLO PARA PRUEBAS
################## DATASOURCE H2 #######################
#spring.datasource.url=jdbc:h2:mem:clientesdb
#spring.datasource.username=juan
#spring.datasource.password=sa
#spring.datasource.driver-class-name=org.h2.Driver
#spring.h2.console.enabled=true


################## DATASOURCE MYSQL ####################
#LA PRIMERA VEZ QUE PONEMOS UN IMPORT.SQL PARA MIGRAR DATOS ARRANCAR EN 'create'
#UNA VEZ RECUPERADOS LOS DATOS SETEAMOS ESTO EN 'update' Y GUARDAMOS
#REARRANCAMOS SERVER Y YA NO PASA NADA POR TENER EL IMPORT A PESAR DE QUE DEBERIAMOS QUITARLO
#PARA EVITAR CONFUSIONES, LA BASE YA ESTAR�A MIGRADA Y FUNCIONANDO EN UPDATE A PARTIR DE ESOS
#REGISTROS MIGRADOS, ACTUALIZANDO A ESO TODO LO QUE SE LE INGESTE
spring.datasource.url=jdbc:mysql://localhost/clientesdb?useSSL=false
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update
#PARA VER EN LA CONSOLA TODAS LAS SENTENCIAS SQL QUE HACE POR DETRAS JPA
logging.level.org.hibernate.SQL=debug

############ SUBIDA DE ARCHIVOS AL SERVIDOR
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB





